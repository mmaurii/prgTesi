// Generated from miniSLGrammar.g4 by ANTLR 4.13.2
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import { ATNDeserializer, DFA, Lexer, LexerATNSimulator, PredictionContextCache, Token } from "antlr4";
class miniSLGrammarLexer extends Lexer {
    constructor(input) {
        super(input);
        this._interp = new LexerATNSimulator(this, miniSLGrammarLexer._ATN, miniSLGrammarLexer.DecisionsToDFA, new PredictionContextCache());
    }
    get grammarFileName() { return "miniSLGrammar.g4"; }
    get literalNames() { return miniSLGrammarLexer.literalNames; }
    get symbolicNames() { return miniSLGrammarLexer.symbolicNames; }
    get ruleNames() { return miniSLGrammarLexer.ruleNames; }
    get serializedATN() { return miniSLGrammarLexer._serializedATN; }
    get channelNames() { return miniSLGrammarLexer.channelNames; }
    get modeNames() { return miniSLGrammarLexer.modeNames; }
    static get _ATN() {
        if (!miniSLGrammarLexer.__ATN) {
            miniSLGrammarLexer.__ATN = new ATNDeserializer().deserialize(miniSLGrammarLexer._serializedATN);
        }
        return miniSLGrammarLexer.__ATN;
    }
}
miniSLGrammarLexer.T__0 = 1;
miniSLGrammarLexer.T__1 = 2;
miniSLGrammarLexer.T__2 = 3;
miniSLGrammarLexer.T__3 = 4;
miniSLGrammarLexer.T__4 = 5;
miniSLGrammarLexer.T__5 = 6;
miniSLGrammarLexer.T__6 = 7;
miniSLGrammarLexer.T__7 = 8;
miniSLGrammarLexer.T__8 = 9;
miniSLGrammarLexer.T__9 = 10;
miniSLGrammarLexer.T__10 = 11;
miniSLGrammarLexer.T__11 = 12;
miniSLGrammarLexer.T__12 = 13;
miniSLGrammarLexer.T__13 = 14;
miniSLGrammarLexer.T__14 = 15;
miniSLGrammarLexer.T__15 = 16;
miniSLGrammarLexer.T__16 = 17;
miniSLGrammarLexer.T__17 = 18;
miniSLGrammarLexer.T__18 = 19;
miniSLGrammarLexer.T__19 = 20;
miniSLGrammarLexer.T__20 = 21;
miniSLGrammarLexer.T__21 = 22;
miniSLGrammarLexer.T__22 = 23;
miniSLGrammarLexer.T__23 = 24;
miniSLGrammarLexer.T__24 = 25;
miniSLGrammarLexer.T__25 = 26;
miniSLGrammarLexer.T__26 = 27;
miniSLGrammarLexer.T__27 = 28;
miniSLGrammarLexer.T__28 = 29;
miniSLGrammarLexer.T__29 = 30;
miniSLGrammarLexer.ID = 31;
miniSLGrammarLexer.NUMBER = 32;
miniSLGrammarLexer.STRING = 33;
miniSLGrammarLexer.NEWLINE = 34;
miniSLGrammarLexer.LINECOMMENTS = 35;
miniSLGrammarLexer.WS = 36;
miniSLGrammarLexer.BLOCKCOMMENTS = 37;
miniSLGrammarLexer.EOF = Token.EOF;
miniSLGrammarLexer.channelNames = ["DEFAULT_TOKEN_CHANNEL", "HIDDEN"];
miniSLGrammarLexer.literalNames = [null, "'('",
    "')'", "'=>'",
    "'{'", "'}'",
    "'service'",
    "':'", "'void'",
    "'->'", "';'",
    "'if'", "'else'",
    "'for'", "'in'",
    "'range'", "','",
    "'call'", "'+'",
    "'-'", "'*'",
    "'/'", "'&&'",
    "'||'", "'=='",
    "'!='", "'<'",
    "'<='", "'>'",
    "'>='", "'.'"];
miniSLGrammarLexer.symbolicNames = [null, null,
    null, null,
    null, null,
    null, null,
    null, null,
    null, null,
    null, null,
    null, null,
    null, null,
    null, null,
    null, null,
    null, null,
    null, null,
    null, null,
    null, null,
    null, "ID",
    "NUMBER", "STRING",
    "NEWLINE",
    "LINECOMMENTS",
    "WS", "BLOCKCOMMENTS"];
miniSLGrammarLexer.modeNames = ["DEFAULT_MODE",];
miniSLGrammarLexer.ruleNames = [
    "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
    "T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
    "T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
    "T__25", "T__26", "T__27", "T__28", "T__29", "CHAR", "ID", "DIGIT", "NUMBER",
    "STRING", "NEWLINE", "LINECOMMENTS", "WS", "BLOCKCOMMENTS",
];
miniSLGrammarLexer._serializedATN = [4, 0, 37, 234, 6, -1, 2, 0,
    7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9,
    7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2, 16, 7,
    16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23,
    2, 24, 7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
    31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38,
    7, 38, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1,
    5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10,
    1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1,
    14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18,
    1, 19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 24, 1,
    24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30,
    1, 30, 1, 31, 1, 31, 5, 31, 175, 8, 31, 10, 31, 12, 31, 178, 9, 31, 1, 32, 1, 32, 1, 33, 4, 33, 183,
    8, 33, 11, 33, 12, 33, 184, 1, 34, 1, 34, 5, 34, 189, 8, 34, 10, 34, 12, 34, 192, 9, 34, 1, 34,
    1, 34, 1, 35, 1, 35, 1, 35, 3, 35, 199, 8, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 36, 5, 36, 207,
    8, 36, 10, 36, 12, 36, 210, 9, 36, 1, 36, 1, 36, 1, 37, 4, 37, 215, 8, 37, 11, 37, 12, 37, 216,
    1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 38, 5, 38, 225, 8, 38, 10, 38, 12, 38, 228, 9, 38, 1, 38, 1,
    38, 1, 38, 1, 38, 1, 38, 1, 226, 0, 39, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19,
    10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43,
    22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 0, 63, 31, 65, 0, 67, 32,
    69, 33, 71, 34, 73, 35, 75, 36, 77, 37, 1, 0, 7, 2, 0, 65, 90, 97, 122, 3, 0, 65, 90, 95, 95, 97,
    122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 1, 0, 48, 57, 3, 0, 10, 10, 13, 13, 34, 34, 2, 0, 10,
    10, 13, 13, 2, 0, 9, 9, 32, 32, 238, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0,
    0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19,
    1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0,
    0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41,
    1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0,
    0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 67,
    1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0,
    0, 1, 79, 1, 0, 0, 0, 3, 81, 1, 0, 0, 0, 5, 83, 1, 0, 0, 0, 7, 86, 1, 0, 0, 0, 9, 88, 1, 0, 0, 0, 11, 90,
    1, 0, 0, 0, 13, 98, 1, 0, 0, 0, 15, 100, 1, 0, 0, 0, 17, 105, 1, 0, 0, 0, 19, 108, 1, 0, 0, 0, 21, 110,
    1, 0, 0, 0, 23, 113, 1, 0, 0, 0, 25, 118, 1, 0, 0, 0, 27, 122, 1, 0, 0, 0, 29, 125, 1, 0, 0, 0, 31,
    131, 1, 0, 0, 0, 33, 133, 1, 0, 0, 0, 35, 138, 1, 0, 0, 0, 37, 140, 1, 0, 0, 0, 39, 142, 1, 0, 0, 0,
    41, 144, 1, 0, 0, 0, 43, 146, 1, 0, 0, 0, 45, 149, 1, 0, 0, 0, 47, 152, 1, 0, 0, 0, 49, 155, 1, 0,
    0, 0, 51, 158, 1, 0, 0, 0, 53, 160, 1, 0, 0, 0, 55, 163, 1, 0, 0, 0, 57, 165, 1, 0, 0, 0, 59, 168,
    1, 0, 0, 0, 61, 170, 1, 0, 0, 0, 63, 172, 1, 0, 0, 0, 65, 179, 1, 0, 0, 0, 67, 182, 1, 0, 0, 0, 69,
    186, 1, 0, 0, 0, 71, 198, 1, 0, 0, 0, 73, 202, 1, 0, 0, 0, 75, 214, 1, 0, 0, 0, 77, 220, 1, 0, 0, 0,
    79, 80, 5, 40, 0, 0, 80, 2, 1, 0, 0, 0, 81, 82, 5, 41, 0, 0, 82, 4, 1, 0, 0, 0, 83, 84, 5, 61, 0, 0,
    84, 85, 5, 62, 0, 0, 85, 6, 1, 0, 0, 0, 86, 87, 5, 123, 0, 0, 87, 8, 1, 0, 0, 0, 88, 89, 5, 125, 0,
    0, 89, 10, 1, 0, 0, 0, 90, 91, 5, 115, 0, 0, 91, 92, 5, 101, 0, 0, 92, 93, 5, 114, 0, 0, 93, 94, 5,
    118, 0, 0, 94, 95, 5, 105, 0, 0, 95, 96, 5, 99, 0, 0, 96, 97, 5, 101, 0, 0, 97, 12, 1, 0, 0, 0, 98,
    99, 5, 58, 0, 0, 99, 14, 1, 0, 0, 0, 100, 101, 5, 118, 0, 0, 101, 102, 5, 111, 0, 0, 102, 103, 5,
    105, 0, 0, 103, 104, 5, 100, 0, 0, 104, 16, 1, 0, 0, 0, 105, 106, 5, 45, 0, 0, 106, 107, 5, 62,
    0, 0, 107, 18, 1, 0, 0, 0, 108, 109, 5, 59, 0, 0, 109, 20, 1, 0, 0, 0, 110, 111, 5, 105, 0, 0, 111,
    112, 5, 102, 0, 0, 112, 22, 1, 0, 0, 0, 113, 114, 5, 101, 0, 0, 114, 115, 5, 108, 0, 0, 115, 116,
    5, 115, 0, 0, 116, 117, 5, 101, 0, 0, 117, 24, 1, 0, 0, 0, 118, 119, 5, 102, 0, 0, 119, 120, 5,
    111, 0, 0, 120, 121, 5, 114, 0, 0, 121, 26, 1, 0, 0, 0, 122, 123, 5, 105, 0, 0, 123, 124, 5, 110,
    0, 0, 124, 28, 1, 0, 0, 0, 125, 126, 5, 114, 0, 0, 126, 127, 5, 97, 0, 0, 127, 128, 5, 110, 0, 0,
    128, 129, 5, 103, 0, 0, 129, 130, 5, 101, 0, 0, 130, 30, 1, 0, 0, 0, 131, 132, 5, 44, 0, 0, 132,
    32, 1, 0, 0, 0, 133, 134, 5, 99, 0, 0, 134, 135, 5, 97, 0, 0, 135, 136, 5, 108, 0, 0, 136, 137,
    5, 108, 0, 0, 137, 34, 1, 0, 0, 0, 138, 139, 5, 43, 0, 0, 139, 36, 1, 0, 0, 0, 140, 141, 5, 45, 0,
    0, 141, 38, 1, 0, 0, 0, 142, 143, 5, 42, 0, 0, 143, 40, 1, 0, 0, 0, 144, 145, 5, 47, 0, 0, 145, 42,
    1, 0, 0, 0, 146, 147, 5, 38, 0, 0, 147, 148, 5, 38, 0, 0, 148, 44, 1, 0, 0, 0, 149, 150, 5, 124,
    0, 0, 150, 151, 5, 124, 0, 0, 151, 46, 1, 0, 0, 0, 152, 153, 5, 61, 0, 0, 153, 154, 5, 61, 0, 0,
    154, 48, 1, 0, 0, 0, 155, 156, 5, 33, 0, 0, 156, 157, 5, 61, 0, 0, 157, 50, 1, 0, 0, 0, 158, 159,
    5, 60, 0, 0, 159, 52, 1, 0, 0, 0, 160, 161, 5, 60, 0, 0, 161, 162, 5, 61, 0, 0, 162, 54, 1, 0, 0,
    0, 163, 164, 5, 62, 0, 0, 164, 56, 1, 0, 0, 0, 165, 166, 5, 62, 0, 0, 166, 167, 5, 61, 0, 0, 167,
    58, 1, 0, 0, 0, 168, 169, 5, 46, 0, 0, 169, 60, 1, 0, 0, 0, 170, 171, 7, 0, 0, 0, 171, 62, 1, 0, 0,
    0, 172, 176, 7, 1, 0, 0, 173, 175, 7, 2, 0, 0, 174, 173, 1, 0, 0, 0, 175, 178, 1, 0, 0, 0, 176, 174,
    1, 0, 0, 0, 176, 177, 1, 0, 0, 0, 177, 64, 1, 0, 0, 0, 178, 176, 1, 0, 0, 0, 179, 180, 7, 3, 0, 0,
    180, 66, 1, 0, 0, 0, 181, 183, 3, 65, 32, 0, 182, 181, 1, 0, 0, 0, 183, 184, 1, 0, 0, 0, 184, 182,
    1, 0, 0, 0, 184, 185, 1, 0, 0, 0, 185, 68, 1, 0, 0, 0, 186, 190, 5, 34, 0, 0, 187, 189, 8, 4, 0, 0,
    188, 187, 1, 0, 0, 0, 189, 192, 1, 0, 0, 0, 190, 188, 1, 0, 0, 0, 190, 191, 1, 0, 0, 0, 191, 193,
    1, 0, 0, 0, 192, 190, 1, 0, 0, 0, 193, 194, 5, 34, 0, 0, 194, 70, 1, 0, 0, 0, 195, 196, 5, 13, 0,
    0, 196, 199, 5, 10, 0, 0, 197, 199, 7, 5, 0, 0, 198, 195, 1, 0, 0, 0, 198, 197, 1, 0, 0, 0, 199,
    200, 1, 0, 0, 0, 200, 201, 6, 35, 0, 0, 201, 72, 1, 0, 0, 0, 202, 203, 5, 47, 0, 0, 203, 204, 5,
    47, 0, 0, 204, 208, 1, 0, 0, 0, 205, 207, 8, 5, 0, 0, 206, 205, 1, 0, 0, 0, 207, 210, 1, 0, 0, 0,
    208, 206, 1, 0, 0, 0, 208, 209, 1, 0, 0, 0, 209, 211, 1, 0, 0, 0, 210, 208, 1, 0, 0, 0, 211, 212,
    6, 36, 0, 0, 212, 74, 1, 0, 0, 0, 213, 215, 7, 6, 0, 0, 214, 213, 1, 0, 0, 0, 215, 216, 1, 0, 0, 0,
    216, 214, 1, 0, 0, 0, 216, 217, 1, 0, 0, 0, 217, 218, 1, 0, 0, 0, 218, 219, 6, 37, 0, 0, 219, 76,
    1, 0, 0, 0, 220, 221, 5, 47, 0, 0, 221, 222, 5, 42, 0, 0, 222, 226, 1, 0, 0, 0, 223, 225, 9, 0, 0,
    0, 224, 223, 1, 0, 0, 0, 225, 228, 1, 0, 0, 0, 226, 227, 1, 0, 0, 0, 226, 224, 1, 0, 0, 0, 227, 229,
    1, 0, 0, 0, 228, 226, 1, 0, 0, 0, 229, 230, 5, 42, 0, 0, 230, 231, 5, 47, 0, 0, 231, 232, 1, 0, 0,
    0, 232, 233, 6, 38, 0, 0, 233, 78, 1, 0, 0, 0, 8, 0, 176, 184, 190, 198, 208, 216, 226, 1, 6, 0,
    0];
miniSLGrammarLexer.DecisionsToDFA = miniSLGrammarLexer._ATN.decisionToState.map((ds, index) => new DFA(ds, index));
export default miniSLGrammarLexer;
//# sourceMappingURL=miniSLGrammarLexer.js.map